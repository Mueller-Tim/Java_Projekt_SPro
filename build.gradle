plugins {

	id 'java'
	id 'application'
	id 'org.javamodularity.moduleplugin' version '1.8.12'
	id 'org.openjfx.javafxplugin' version '0.1.0'
	id 'org.beryx.jlink' version '2.25.0'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

description = 'spro'
group = 'ch.zhaw'
version = '1.0.0-SNAPSHOT'

java {
	sourceCompatibility = '18'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Use JUnit Jupiter for testing.
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	// Jfoenix
	implementation 'com.jfoenix:jfoenix:9.0.1'
	// JavaFX
	implementation 'org.openjfx:javafx-media:${javafx.version}'
	implementation 'org.openjfx:javafx-controls:${javafx.version}'
	implementation 'org.openjfx:javafx-fxml:${javafx.version}'
	implementation group: 'org.controlsfx', name: 'controlsfx', version: '8.0.5'
	implementation group: 'org.openjfx', name: 'javafx-swing', version: '13'
	implementation 'org.openjfx:javafx-swing:15'
	// Spring boot dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// dotenv is used to load environment variables from a .env file
	implementation "me.paulschwarz:spring-dotenv:2.5.4"
	implementation("org.apache.pdfbox:pdfbox:3.0.0")
	//Icons
	implementation group: 'org.kordamp.ikonli', name:'ikonli-javafx', version: '12.3.1'
	implementation 'org.kordamp.ikonli:ikonli-materialdesign2-pack:12.3.1'
}

javafx {
	version = '21'
	modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.media' ]
}

java {
	// By default the Java version of the gradle process is used as source/target version.
	// This can be overridden, to ensure a specific version. Enable only if required.
	sourceCompatibility = JavaVersion.VERSION_17 // ensure Java source code compatibility
	// targetCompatibility = JavaVersion.VERSION_17 // version of the created byte-code

	// Java compiler specific options
	compileJava {
		// source files should be UTF-8 encoded
		options.encoding = 'UTF-8'
		// for more options see https://docs.gradle.org/current/dsl/org.gradle.api.tasks.compile.CompileOptions.html
	}
}
application {
	mainClassName = 'ch.zhaw.spro.SetUpUI'
}

test{
	useJUnitPlatform()
}